

CREATE COMPUTE MODULE LogFlow_DatabaseLogging
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE propRef REFERENCE TO InputExceptionList.*;
		DECLARE fwName CHARACTER propRef.Name;
		DECLARE Name CHARACTER;
		SET Name= SUBSTRING(fwName BEFORE '#');
		
		DECLARE mID CHARACTER;
		SET mID=InputRoot.MQMD.MsgId;
		
		DECLARE myMsgBlob BLOB;
		DECLARE myMsgChar CHARACTER;
		SET myMsgBlob = ASBITSTREAM(InputRoot.XMLNSC.*, InputRoot.Properties.Encoding, InputRoot.Properties.CodedCharSetId, '','','', FolderBitStream );
  		SET myMsgChar = CAST( myMsgBlob AS CHAR CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.MQMD.Encoding);
		DECLARE pld CHARACTER;
		SET pld=myMsgChar;
		
		DECLARE eMsg CHARACTER;
		SET eMsg=InputExceptionList.RecoverableException.*;
		
		DECLARE cTS TIMESTAMP;
		SET cTS= CURRENT_TIMESTAMP;
		
		INSERT INTO DataSource.sample.exception(MsgFlow, MsgID, Payload, ExcpnMsg, CurrTimeStamp) VALUES (Name, mID, pld, eMsg, cTS);
		RETURN TRUE;
	END;
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
